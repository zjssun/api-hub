package com.main.utils;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: econ.proto
// Protobuf Java Version: 4.31.0

@com.google.protobuf.Generated
public final class Econ {
  private Econ() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 0,
      /* suffix= */ "",
      Econ.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CEconItemPreviewDataBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CEconItemPreviewDataBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     * @return Whether the accountid field is set.
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     * @return The accountid.
     */
    int getAccountid();

    /**
     * <code>optional uint64 itemid = 2;</code>
     * @return Whether the itemid field is set.
     */
    boolean hasItemid();
    /**
     * <code>optional uint64 itemid = 2;</code>
     * @return The itemid.
     */
    long getItemid();

    /**
     * <code>optional uint32 defindex = 3;</code>
     * @return Whether the defindex field is set.
     */
    boolean hasDefindex();
    /**
     * <code>optional uint32 defindex = 3;</code>
     * @return The defindex.
     */
    int getDefindex();

    /**
     * <code>optional uint32 paintindex = 4;</code>
     * @return Whether the paintindex field is set.
     */
    boolean hasPaintindex();
    /**
     * <code>optional uint32 paintindex = 4;</code>
     * @return The paintindex.
     */
    int getPaintindex();

    /**
     * <code>optional uint32 rarity = 5;</code>
     * @return Whether the rarity field is set.
     */
    boolean hasRarity();
    /**
     * <code>optional uint32 rarity = 5;</code>
     * @return The rarity.
     */
    int getRarity();

    /**
     * <code>optional uint32 quality = 6;</code>
     * @return Whether the quality field is set.
     */
    boolean hasQuality();
    /**
     * <code>optional uint32 quality = 6;</code>
     * @return The quality.
     */
    int getQuality();

    /**
     * <code>optional uint32 paintwear = 7;</code>
     * @return Whether the paintwear field is set.
     */
    boolean hasPaintwear();
    /**
     * <code>optional uint32 paintwear = 7;</code>
     * @return The paintwear.
     */
    int getPaintwear();

    /**
     * <code>optional uint32 paintseed = 8;</code>
     * @return Whether the paintseed field is set.
     */
    boolean hasPaintseed();
    /**
     * <code>optional uint32 paintseed = 8;</code>
     * @return The paintseed.
     */
    int getPaintseed();

    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     * @return Whether the killeaterscoretype field is set.
     */
    boolean hasKilleaterscoretype();
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     * @return The killeaterscoretype.
     */
    int getKilleaterscoretype();

    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     * @return Whether the killeatervalue field is set.
     */
    boolean hasKilleatervalue();
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     * @return The killeatervalue.
     */
    int getKilleatervalue();

    /**
     * <code>optional string customname = 11;</code>
     * @return Whether the customname field is set.
     */
    boolean hasCustomname();
    /**
     * <code>optional string customname = 11;</code>
     * @return The customname.
     */
    java.lang.String getCustomname();
    /**
     * <code>optional string customname = 11;</code>
     * @return The bytes for customname.
     */
    com.google.protobuf.ByteString
        getCustomnameBytes();

    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> 
        getStickersList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    Econ.CEconItemPreviewDataBlock.Sticker getStickers(int index);
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    int getStickersCount();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getStickersOrBuilderList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    Econ.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
        int index);

    /**
     * <code>optional uint32 inventory = 13;</code>
     * @return Whether the inventory field is set.
     */
    boolean hasInventory();
    /**
     * <code>optional uint32 inventory = 13;</code>
     * @return The inventory.
     */
    int getInventory();

    /**
     * <code>optional uint32 origin = 14;</code>
     * @return Whether the origin field is set.
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 14;</code>
     * @return The origin.
     */
    int getOrigin();

    /**
     * <code>optional uint32 questid = 15;</code>
     * @return Whether the questid field is set.
     */
    boolean hasQuestid();
    /**
     * <code>optional uint32 questid = 15;</code>
     * @return The questid.
     */
    int getQuestid();

    /**
     * <code>optional uint32 dropreason = 16;</code>
     * @return Whether the dropreason field is set.
     */
    boolean hasDropreason();
    /**
     * <code>optional uint32 dropreason = 16;</code>
     * @return The dropreason.
     */
    int getDropreason();

    /**
     * <code>optional uint32 musicindex = 17;</code>
     * @return Whether the musicindex field is set.
     */
    boolean hasMusicindex();
    /**
     * <code>optional uint32 musicindex = 17;</code>
     * @return The musicindex.
     */
    int getMusicindex();

    /**
     * <code>optional int32 entindex = 18;</code>
     * @return Whether the entindex field is set.
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 18;</code>
     * @return The entindex.
     */
    int getEntindex();

    /**
     * <code>optional uint32 petindex = 19;</code>
     * @return Whether the petindex field is set.
     */
    boolean hasPetindex();
    /**
     * <code>optional uint32 petindex = 19;</code>
     * @return The petindex.
     */
    int getPetindex();

    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> 
        getKeychainsList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    Econ.CEconItemPreviewDataBlock.Sticker getKeychains(int index);
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    int getKeychainsCount();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getKeychainsOrBuilderList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    Econ.CEconItemPreviewDataBlock.StickerOrBuilder getKeychainsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CEconItemPreviewDataBlock}
   */
  public static final class CEconItemPreviewDataBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CEconItemPreviewDataBlock)
      CEconItemPreviewDataBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 31,
        /* patch= */ 0,
        /* suffix= */ "",
        CEconItemPreviewDataBlock.class.getName());
    }
    // Use CEconItemPreviewDataBlock.newBuilder() to construct.
    private CEconItemPreviewDataBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CEconItemPreviewDataBlock() {
      customname_ = "";
      stickers_ = java.util.Collections.emptyList();
      keychains_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Econ.internal_static_CEconItemPreviewDataBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Econ.internal_static_CEconItemPreviewDataBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Econ.CEconItemPreviewDataBlock.class, Econ.CEconItemPreviewDataBlock.Builder.class);
    }

    public interface StickerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CEconItemPreviewDataBlock.Sticker)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 slot = 1;</code>
       * @return Whether the slot field is set.
       */
      boolean hasSlot();
      /**
       * <code>optional uint32 slot = 1;</code>
       * @return The slot.
       */
      int getSlot();

      /**
       * <code>optional uint32 sticker_id = 2;</code>
       * @return Whether the stickerId field is set.
       */
      boolean hasStickerId();
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       * @return The stickerId.
       */
      int getStickerId();

      /**
       * <code>optional float wear = 3;</code>
       * @return Whether the wear field is set.
       */
      boolean hasWear();
      /**
       * <code>optional float wear = 3;</code>
       * @return The wear.
       */
      float getWear();

      /**
       * <code>optional float scale = 4;</code>
       * @return Whether the scale field is set.
       */
      boolean hasScale();
      /**
       * <code>optional float scale = 4;</code>
       * @return The scale.
       */
      float getScale();

      /**
       * <code>optional float rotation = 5;</code>
       * @return Whether the rotation field is set.
       */
      boolean hasRotation();
      /**
       * <code>optional float rotation = 5;</code>
       * @return The rotation.
       */
      float getRotation();

      /**
       * <code>optional uint32 tint_id = 6;</code>
       * @return Whether the tintId field is set.
       */
      boolean hasTintId();
      /**
       * <code>optional uint32 tint_id = 6;</code>
       * @return The tintId.
       */
      int getTintId();

      /**
       * <code>optional float offset_x = 7;</code>
       * @return Whether the offsetX field is set.
       */
      boolean hasOffsetX();
      /**
       * <code>optional float offset_x = 7;</code>
       * @return The offsetX.
       */
      float getOffsetX();

      /**
       * <code>optional float offset_y = 8;</code>
       * @return Whether the offsetY field is set.
       */
      boolean hasOffsetY();
      /**
       * <code>optional float offset_y = 8;</code>
       * @return The offsetY.
       */
      float getOffsetY();

      /**
       * <code>optional float offset_z = 9;</code>
       * @return Whether the offsetZ field is set.
       */
      boolean hasOffsetZ();
      /**
       * <code>optional float offset_z = 9;</code>
       * @return The offsetZ.
       */
      float getOffsetZ();

      /**
       * <code>optional uint32 pattern = 10;</code>
       * @return Whether the pattern field is set.
       */
      boolean hasPattern();
      /**
       * <code>optional uint32 pattern = 10;</code>
       * @return The pattern.
       */
      int getPattern();

      /**
       * <code>optional uint32 highlight_reel = 11;</code>
       * @return Whether the highlightReel field is set.
       */
      boolean hasHighlightReel();
      /**
       * <code>optional uint32 highlight_reel = 11;</code>
       * @return The highlightReel.
       */
      int getHighlightReel();
    }
    /**
     * Protobuf type {@code CEconItemPreviewDataBlock.Sticker}
     */
    public static final class Sticker extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CEconItemPreviewDataBlock.Sticker)
        StickerOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 31,
          /* patch= */ 0,
          /* suffix= */ "",
          Sticker.class.getName());
      }
      // Use Sticker.newBuilder() to construct.
      private Sticker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Sticker() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Econ.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Econ.internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Econ.CEconItemPreviewDataBlock.Sticker.class, Econ.CEconItemPreviewDataBlock.Sticker.Builder.class);
      }

      private int bitField0_;
      public static final int SLOT_FIELD_NUMBER = 1;
      private int slot_ = 0;
      /**
       * <code>optional uint32 slot = 1;</code>
       * @return Whether the slot field is set.
       */
      @java.lang.Override
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 slot = 1;</code>
       * @return The slot.
       */
      @java.lang.Override
      public int getSlot() {
        return slot_;
      }

      public static final int STICKER_ID_FIELD_NUMBER = 2;
      private int stickerId_ = 0;
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       * @return Whether the stickerId field is set.
       */
      @java.lang.Override
      public boolean hasStickerId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       * @return The stickerId.
       */
      @java.lang.Override
      public int getStickerId() {
        return stickerId_;
      }

      public static final int WEAR_FIELD_NUMBER = 3;
      private float wear_ = 0F;
      /**
       * <code>optional float wear = 3;</code>
       * @return Whether the wear field is set.
       */
      @java.lang.Override
      public boolean hasWear() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float wear = 3;</code>
       * @return The wear.
       */
      @java.lang.Override
      public float getWear() {
        return wear_;
      }

      public static final int SCALE_FIELD_NUMBER = 4;
      private float scale_ = 0F;
      /**
       * <code>optional float scale = 4;</code>
       * @return Whether the scale field is set.
       */
      @java.lang.Override
      public boolean hasScale() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional float scale = 4;</code>
       * @return The scale.
       */
      @java.lang.Override
      public float getScale() {
        return scale_;
      }

      public static final int ROTATION_FIELD_NUMBER = 5;
      private float rotation_ = 0F;
      /**
       * <code>optional float rotation = 5;</code>
       * @return Whether the rotation field is set.
       */
      @java.lang.Override
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float rotation = 5;</code>
       * @return The rotation.
       */
      @java.lang.Override
      public float getRotation() {
        return rotation_;
      }

      public static final int TINT_ID_FIELD_NUMBER = 6;
      private int tintId_ = 0;
      /**
       * <code>optional uint32 tint_id = 6;</code>
       * @return Whether the tintId field is set.
       */
      @java.lang.Override
      public boolean hasTintId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 tint_id = 6;</code>
       * @return The tintId.
       */
      @java.lang.Override
      public int getTintId() {
        return tintId_;
      }

      public static final int OFFSET_X_FIELD_NUMBER = 7;
      private float offsetX_ = 0F;
      /**
       * <code>optional float offset_x = 7;</code>
       * @return Whether the offsetX field is set.
       */
      @java.lang.Override
      public boolean hasOffsetX() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional float offset_x = 7;</code>
       * @return The offsetX.
       */
      @java.lang.Override
      public float getOffsetX() {
        return offsetX_;
      }

      public static final int OFFSET_Y_FIELD_NUMBER = 8;
      private float offsetY_ = 0F;
      /**
       * <code>optional float offset_y = 8;</code>
       * @return Whether the offsetY field is set.
       */
      @java.lang.Override
      public boolean hasOffsetY() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional float offset_y = 8;</code>
       * @return The offsetY.
       */
      @java.lang.Override
      public float getOffsetY() {
        return offsetY_;
      }

      public static final int OFFSET_Z_FIELD_NUMBER = 9;
      private float offsetZ_ = 0F;
      /**
       * <code>optional float offset_z = 9;</code>
       * @return Whether the offsetZ field is set.
       */
      @java.lang.Override
      public boolean hasOffsetZ() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional float offset_z = 9;</code>
       * @return The offsetZ.
       */
      @java.lang.Override
      public float getOffsetZ() {
        return offsetZ_;
      }

      public static final int PATTERN_FIELD_NUMBER = 10;
      private int pattern_ = 0;
      /**
       * <code>optional uint32 pattern = 10;</code>
       * @return Whether the pattern field is set.
       */
      @java.lang.Override
      public boolean hasPattern() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 pattern = 10;</code>
       * @return The pattern.
       */
      @java.lang.Override
      public int getPattern() {
        return pattern_;
      }

      public static final int HIGHLIGHT_REEL_FIELD_NUMBER = 11;
      private int highlightReel_ = 0;
      /**
       * <code>optional uint32 highlight_reel = 11;</code>
       * @return Whether the highlightReel field is set.
       */
      @java.lang.Override
      public boolean hasHighlightReel() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint32 highlight_reel = 11;</code>
       * @return The highlightReel.
       */
      @java.lang.Override
      public int getHighlightReel() {
        return highlightReel_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, slot_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, stickerId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeFloat(3, wear_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeFloat(4, scale_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeFloat(5, rotation_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, tintId_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeFloat(7, offsetX_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeFloat(8, offsetY_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeFloat(9, offsetZ_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeUInt32(10, pattern_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt32(11, highlightReel_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, slot_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, stickerId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, wear_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, scale_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, rotation_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, tintId_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, offsetX_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, offsetY_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, offsetZ_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, pattern_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, highlightReel_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Econ.CEconItemPreviewDataBlock.Sticker)) {
          return super.equals(obj);
        }
        Econ.CEconItemPreviewDataBlock.Sticker other = (Econ.CEconItemPreviewDataBlock.Sticker) obj;

        if (hasSlot() != other.hasSlot()) return false;
        if (hasSlot()) {
          if (getSlot()
              != other.getSlot()) return false;
        }
        if (hasStickerId() != other.hasStickerId()) return false;
        if (hasStickerId()) {
          if (getStickerId()
              != other.getStickerId()) return false;
        }
        if (hasWear() != other.hasWear()) return false;
        if (hasWear()) {
          if (java.lang.Float.floatToIntBits(getWear())
              != java.lang.Float.floatToIntBits(
                  other.getWear())) return false;
        }
        if (hasScale() != other.hasScale()) return false;
        if (hasScale()) {
          if (java.lang.Float.floatToIntBits(getScale())
              != java.lang.Float.floatToIntBits(
                  other.getScale())) return false;
        }
        if (hasRotation() != other.hasRotation()) return false;
        if (hasRotation()) {
          if (java.lang.Float.floatToIntBits(getRotation())
              != java.lang.Float.floatToIntBits(
                  other.getRotation())) return false;
        }
        if (hasTintId() != other.hasTintId()) return false;
        if (hasTintId()) {
          if (getTintId()
              != other.getTintId()) return false;
        }
        if (hasOffsetX() != other.hasOffsetX()) return false;
        if (hasOffsetX()) {
          if (java.lang.Float.floatToIntBits(getOffsetX())
              != java.lang.Float.floatToIntBits(
                  other.getOffsetX())) return false;
        }
        if (hasOffsetY() != other.hasOffsetY()) return false;
        if (hasOffsetY()) {
          if (java.lang.Float.floatToIntBits(getOffsetY())
              != java.lang.Float.floatToIntBits(
                  other.getOffsetY())) return false;
        }
        if (hasOffsetZ() != other.hasOffsetZ()) return false;
        if (hasOffsetZ()) {
          if (java.lang.Float.floatToIntBits(getOffsetZ())
              != java.lang.Float.floatToIntBits(
                  other.getOffsetZ())) return false;
        }
        if (hasPattern() != other.hasPattern()) return false;
        if (hasPattern()) {
          if (getPattern()
              != other.getPattern()) return false;
        }
        if (hasHighlightReel() != other.hasHighlightReel()) return false;
        if (hasHighlightReel()) {
          if (getHighlightReel()
              != other.getHighlightReel()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSlot()) {
          hash = (37 * hash) + SLOT_FIELD_NUMBER;
          hash = (53 * hash) + getSlot();
        }
        if (hasStickerId()) {
          hash = (37 * hash) + STICKER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getStickerId();
        }
        if (hasWear()) {
          hash = (37 * hash) + WEAR_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getWear());
        }
        if (hasScale()) {
          hash = (37 * hash) + SCALE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScale());
        }
        if (hasRotation()) {
          hash = (37 * hash) + ROTATION_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getRotation());
        }
        if (hasTintId()) {
          hash = (37 * hash) + TINT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTintId();
        }
        if (hasOffsetX()) {
          hash = (37 * hash) + OFFSET_X_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getOffsetX());
        }
        if (hasOffsetY()) {
          hash = (37 * hash) + OFFSET_Y_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getOffsetY());
        }
        if (hasOffsetZ()) {
          hash = (37 * hash) + OFFSET_Z_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getOffsetZ());
        }
        if (hasPattern()) {
          hash = (37 * hash) + PATTERN_FIELD_NUMBER;
          hash = (53 * hash) + getPattern();
        }
        if (hasHighlightReel()) {
          hash = (37 * hash) + HIGHLIGHT_REEL_FIELD_NUMBER;
          hash = (53 * hash) + getHighlightReel();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Econ.CEconItemPreviewDataBlock.Sticker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static Econ.CEconItemPreviewDataBlock.Sticker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static Econ.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Econ.CEconItemPreviewDataBlock.Sticker prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CEconItemPreviewDataBlock.Sticker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CEconItemPreviewDataBlock.Sticker)
          Econ.CEconItemPreviewDataBlock.StickerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Econ.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Econ.internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Econ.CEconItemPreviewDataBlock.Sticker.class, Econ.CEconItemPreviewDataBlock.Sticker.Builder.class);
        }

        // Construct using Econ.CEconItemPreviewDataBlock.Sticker.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          slot_ = 0;
          stickerId_ = 0;
          wear_ = 0F;
          scale_ = 0F;
          rotation_ = 0F;
          tintId_ = 0;
          offsetX_ = 0F;
          offsetY_ = 0F;
          offsetZ_ = 0F;
          pattern_ = 0;
          highlightReel_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Econ.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
        }

        @java.lang.Override
        public Econ.CEconItemPreviewDataBlock.Sticker getDefaultInstanceForType() {
          return Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance();
        }

        @java.lang.Override
        public Econ.CEconItemPreviewDataBlock.Sticker build() {
          Econ.CEconItemPreviewDataBlock.Sticker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public Econ.CEconItemPreviewDataBlock.Sticker buildPartial() {
          Econ.CEconItemPreviewDataBlock.Sticker result = new Econ.CEconItemPreviewDataBlock.Sticker(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(Econ.CEconItemPreviewDataBlock.Sticker result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.slot_ = slot_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.stickerId_ = stickerId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.wear_ = wear_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.scale_ = scale_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.rotation_ = rotation_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.tintId_ = tintId_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.offsetX_ = offsetX_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.offsetY_ = offsetY_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.offsetZ_ = offsetZ_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.pattern_ = pattern_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.highlightReel_ = highlightReel_;
            to_bitField0_ |= 0x00000400;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Econ.CEconItemPreviewDataBlock.Sticker) {
            return mergeFrom((Econ.CEconItemPreviewDataBlock.Sticker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Econ.CEconItemPreviewDataBlock.Sticker other) {
          if (other == Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance()) return this;
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (other.hasStickerId()) {
            setStickerId(other.getStickerId());
          }
          if (other.hasWear()) {
            setWear(other.getWear());
          }
          if (other.hasScale()) {
            setScale(other.getScale());
          }
          if (other.hasRotation()) {
            setRotation(other.getRotation());
          }
          if (other.hasTintId()) {
            setTintId(other.getTintId());
          }
          if (other.hasOffsetX()) {
            setOffsetX(other.getOffsetX());
          }
          if (other.hasOffsetY()) {
            setOffsetY(other.getOffsetY());
          }
          if (other.hasOffsetZ()) {
            setOffsetZ(other.getOffsetZ());
          }
          if (other.hasPattern()) {
            setPattern(other.getPattern());
          }
          if (other.hasHighlightReel()) {
            setHighlightReel(other.getHighlightReel());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  slot_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  stickerId_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 29: {
                  wear_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 37: {
                  scale_ = input.readFloat();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 37
                case 45: {
                  rotation_ = input.readFloat();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 45
                case 48: {
                  tintId_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 61: {
                  offsetX_ = input.readFloat();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 61
                case 69: {
                  offsetY_ = input.readFloat();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 69
                case 77: {
                  offsetZ_ = input.readFloat();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 77
                case 80: {
                  pattern_ = input.readUInt32();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 80
                case 88: {
                  highlightReel_ = input.readUInt32();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 88
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int slot_ ;
        /**
         * <code>optional uint32 slot = 1;</code>
         * @return Whether the slot field is set.
         */
        @java.lang.Override
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         * @return The slot.
         */
        @java.lang.Override
        public int getSlot() {
          return slot_;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         * @param value The slot to set.
         * @return This builder for chaining.
         */
        public Builder setSlot(int value) {

          slot_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000001);
          slot_ = 0;
          onChanged();
          return this;
        }

        private int stickerId_ ;
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         * @return Whether the stickerId field is set.
         */
        @java.lang.Override
        public boolean hasStickerId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         * @return The stickerId.
         */
        @java.lang.Override
        public int getStickerId() {
          return stickerId_;
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         * @param value The stickerId to set.
         * @return This builder for chaining.
         */
        public Builder setStickerId(int value) {

          stickerId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearStickerId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          stickerId_ = 0;
          onChanged();
          return this;
        }

        private float wear_ ;
        /**
         * <code>optional float wear = 3;</code>
         * @return Whether the wear field is set.
         */
        @java.lang.Override
        public boolean hasWear() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float wear = 3;</code>
         * @return The wear.
         */
        @java.lang.Override
        public float getWear() {
          return wear_;
        }
        /**
         * <code>optional float wear = 3;</code>
         * @param value The wear to set.
         * @return This builder for chaining.
         */
        public Builder setWear(float value) {

          wear_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional float wear = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearWear() {
          bitField0_ = (bitField0_ & ~0x00000004);
          wear_ = 0F;
          onChanged();
          return this;
        }

        private float scale_ ;
        /**
         * <code>optional float scale = 4;</code>
         * @return Whether the scale field is set.
         */
        @java.lang.Override
        public boolean hasScale() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float scale = 4;</code>
         * @return The scale.
         */
        @java.lang.Override
        public float getScale() {
          return scale_;
        }
        /**
         * <code>optional float scale = 4;</code>
         * @param value The scale to set.
         * @return This builder for chaining.
         */
        public Builder setScale(float value) {

          scale_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scale = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearScale() {
          bitField0_ = (bitField0_ & ~0x00000008);
          scale_ = 0F;
          onChanged();
          return this;
        }

        private float rotation_ ;
        /**
         * <code>optional float rotation = 5;</code>
         * @return Whether the rotation field is set.
         */
        @java.lang.Override
        public boolean hasRotation() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float rotation = 5;</code>
         * @return The rotation.
         */
        @java.lang.Override
        public float getRotation() {
          return rotation_;
        }
        /**
         * <code>optional float rotation = 5;</code>
         * @param value The rotation to set.
         * @return This builder for chaining.
         */
        public Builder setRotation(float value) {

          rotation_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional float rotation = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearRotation() {
          bitField0_ = (bitField0_ & ~0x00000010);
          rotation_ = 0F;
          onChanged();
          return this;
        }

        private int tintId_ ;
        /**
         * <code>optional uint32 tint_id = 6;</code>
         * @return Whether the tintId field is set.
         */
        @java.lang.Override
        public boolean hasTintId() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         * @return The tintId.
         */
        @java.lang.Override
        public int getTintId() {
          return tintId_;
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         * @param value The tintId to set.
         * @return This builder for chaining.
         */
        public Builder setTintId(int value) {

          tintId_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearTintId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          tintId_ = 0;
          onChanged();
          return this;
        }

        private float offsetX_ ;
        /**
         * <code>optional float offset_x = 7;</code>
         * @return Whether the offsetX field is set.
         */
        @java.lang.Override
        public boolean hasOffsetX() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional float offset_x = 7;</code>
         * @return The offsetX.
         */
        @java.lang.Override
        public float getOffsetX() {
          return offsetX_;
        }
        /**
         * <code>optional float offset_x = 7;</code>
         * @param value The offsetX to set.
         * @return This builder for chaining.
         */
        public Builder setOffsetX(float value) {

          offsetX_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional float offset_x = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearOffsetX() {
          bitField0_ = (bitField0_ & ~0x00000040);
          offsetX_ = 0F;
          onChanged();
          return this;
        }

        private float offsetY_ ;
        /**
         * <code>optional float offset_y = 8;</code>
         * @return Whether the offsetY field is set.
         */
        @java.lang.Override
        public boolean hasOffsetY() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional float offset_y = 8;</code>
         * @return The offsetY.
         */
        @java.lang.Override
        public float getOffsetY() {
          return offsetY_;
        }
        /**
         * <code>optional float offset_y = 8;</code>
         * @param value The offsetY to set.
         * @return This builder for chaining.
         */
        public Builder setOffsetY(float value) {

          offsetY_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional float offset_y = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearOffsetY() {
          bitField0_ = (bitField0_ & ~0x00000080);
          offsetY_ = 0F;
          onChanged();
          return this;
        }

        private float offsetZ_ ;
        /**
         * <code>optional float offset_z = 9;</code>
         * @return Whether the offsetZ field is set.
         */
        @java.lang.Override
        public boolean hasOffsetZ() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional float offset_z = 9;</code>
         * @return The offsetZ.
         */
        @java.lang.Override
        public float getOffsetZ() {
          return offsetZ_;
        }
        /**
         * <code>optional float offset_z = 9;</code>
         * @param value The offsetZ to set.
         * @return This builder for chaining.
         */
        public Builder setOffsetZ(float value) {

          offsetZ_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional float offset_z = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearOffsetZ() {
          bitField0_ = (bitField0_ & ~0x00000100);
          offsetZ_ = 0F;
          onChanged();
          return this;
        }

        private int pattern_ ;
        /**
         * <code>optional uint32 pattern = 10;</code>
         * @return Whether the pattern field is set.
         */
        @java.lang.Override
        public boolean hasPattern() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional uint32 pattern = 10;</code>
         * @return The pattern.
         */
        @java.lang.Override
        public int getPattern() {
          return pattern_;
        }
        /**
         * <code>optional uint32 pattern = 10;</code>
         * @param value The pattern to set.
         * @return This builder for chaining.
         */
        public Builder setPattern(int value) {

          pattern_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 pattern = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearPattern() {
          bitField0_ = (bitField0_ & ~0x00000200);
          pattern_ = 0;
          onChanged();
          return this;
        }

        private int highlightReel_ ;
        /**
         * <code>optional uint32 highlight_reel = 11;</code>
         * @return Whether the highlightReel field is set.
         */
        @java.lang.Override
        public boolean hasHighlightReel() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional uint32 highlight_reel = 11;</code>
         * @return The highlightReel.
         */
        @java.lang.Override
        public int getHighlightReel() {
          return highlightReel_;
        }
        /**
         * <code>optional uint32 highlight_reel = 11;</code>
         * @param value The highlightReel to set.
         * @return This builder for chaining.
         */
        public Builder setHighlightReel(int value) {

          highlightReel_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 highlight_reel = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearHighlightReel() {
          bitField0_ = (bitField0_ & ~0x00000400);
          highlightReel_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CEconItemPreviewDataBlock.Sticker)
      }

      // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock.Sticker)
      private static final Econ.CEconItemPreviewDataBlock.Sticker DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Econ.CEconItemPreviewDataBlock.Sticker();
      }

      public static Econ.CEconItemPreviewDataBlock.Sticker getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Sticker>
          PARSER = new com.google.protobuf.AbstractParser<Sticker>() {
        @java.lang.Override
        public Sticker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Sticker> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Sticker> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public Econ.CEconItemPreviewDataBlock.Sticker getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_ = 0;
    /**
     * <code>optional uint32 accountid = 1;</code>
     * @return Whether the accountid field is set.
     */
    @java.lang.Override
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     * @return The accountid.
     */
    @java.lang.Override
    public int getAccountid() {
      return accountid_;
    }

    public static final int ITEMID_FIELD_NUMBER = 2;
    private long itemid_ = 0L;
    /**
     * <code>optional uint64 itemid = 2;</code>
     * @return Whether the itemid field is set.
     */
    @java.lang.Override
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint64 itemid = 2;</code>
     * @return The itemid.
     */
    @java.lang.Override
    public long getItemid() {
      return itemid_;
    }

    public static final int DEFINDEX_FIELD_NUMBER = 3;
    private int defindex_ = 0;
    /**
     * <code>optional uint32 defindex = 3;</code>
     * @return Whether the defindex field is set.
     */
    @java.lang.Override
    public boolean hasDefindex() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 defindex = 3;</code>
     * @return The defindex.
     */
    @java.lang.Override
    public int getDefindex() {
      return defindex_;
    }

    public static final int PAINTINDEX_FIELD_NUMBER = 4;
    private int paintindex_ = 0;
    /**
     * <code>optional uint32 paintindex = 4;</code>
     * @return Whether the paintindex field is set.
     */
    @java.lang.Override
    public boolean hasPaintindex() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 paintindex = 4;</code>
     * @return The paintindex.
     */
    @java.lang.Override
    public int getPaintindex() {
      return paintindex_;
    }

    public static final int RARITY_FIELD_NUMBER = 5;
    private int rarity_ = 0;
    /**
     * <code>optional uint32 rarity = 5;</code>
     * @return Whether the rarity field is set.
     */
    @java.lang.Override
    public boolean hasRarity() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 rarity = 5;</code>
     * @return The rarity.
     */
    @java.lang.Override
    public int getRarity() {
      return rarity_;
    }

    public static final int QUALITY_FIELD_NUMBER = 6;
    private int quality_ = 0;
    /**
     * <code>optional uint32 quality = 6;</code>
     * @return Whether the quality field is set.
     */
    @java.lang.Override
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 quality = 6;</code>
     * @return The quality.
     */
    @java.lang.Override
    public int getQuality() {
      return quality_;
    }

    public static final int PAINTWEAR_FIELD_NUMBER = 7;
    private int paintwear_ = 0;
    /**
     * <code>optional uint32 paintwear = 7;</code>
     * @return Whether the paintwear field is set.
     */
    @java.lang.Override
    public boolean hasPaintwear() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 paintwear = 7;</code>
     * @return The paintwear.
     */
    @java.lang.Override
    public int getPaintwear() {
      return paintwear_;
    }

    public static final int PAINTSEED_FIELD_NUMBER = 8;
    private int paintseed_ = 0;
    /**
     * <code>optional uint32 paintseed = 8;</code>
     * @return Whether the paintseed field is set.
     */
    @java.lang.Override
    public boolean hasPaintseed() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 paintseed = 8;</code>
     * @return The paintseed.
     */
    @java.lang.Override
    public int getPaintseed() {
      return paintseed_;
    }

    public static final int KILLEATERSCORETYPE_FIELD_NUMBER = 9;
    private int killeaterscoretype_ = 0;
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     * @return Whether the killeaterscoretype field is set.
     */
    @java.lang.Override
    public boolean hasKilleaterscoretype() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     * @return The killeaterscoretype.
     */
    @java.lang.Override
    public int getKilleaterscoretype() {
      return killeaterscoretype_;
    }

    public static final int KILLEATERVALUE_FIELD_NUMBER = 10;
    private int killeatervalue_ = 0;
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     * @return Whether the killeatervalue field is set.
     */
    @java.lang.Override
    public boolean hasKilleatervalue() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     * @return The killeatervalue.
     */
    @java.lang.Override
    public int getKilleatervalue() {
      return killeatervalue_;
    }

    public static final int CUSTOMNAME_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private volatile java.lang.Object customname_ = "";
    /**
     * <code>optional string customname = 11;</code>
     * @return Whether the customname field is set.
     */
    @java.lang.Override
    public boolean hasCustomname() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional string customname = 11;</code>
     * @return The customname.
     */
    @java.lang.Override
    public java.lang.String getCustomname() {
      java.lang.Object ref = customname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customname_ = s;
        return s;
      }
    }
    /**
     * <code>optional string customname = 11;</code>
     * @return The bytes for customname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCustomnameBytes() {
      java.lang.Object ref = customname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STICKERS_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> stickers_;
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    @java.lang.Override
    public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> getStickersList() {
      return stickers_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getStickersOrBuilderList() {
      return stickers_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    @java.lang.Override
    public int getStickersCount() {
      return stickers_.size();
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    @java.lang.Override
    public Econ.CEconItemPreviewDataBlock.Sticker getStickers(int index) {
      return stickers_.get(index);
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    @java.lang.Override
    public Econ.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
        int index) {
      return stickers_.get(index);
    }

    public static final int INVENTORY_FIELD_NUMBER = 13;
    private int inventory_ = 0;
    /**
     * <code>optional uint32 inventory = 13;</code>
     * @return Whether the inventory field is set.
     */
    @java.lang.Override
    public boolean hasInventory() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 inventory = 13;</code>
     * @return The inventory.
     */
    @java.lang.Override
    public int getInventory() {
      return inventory_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 14;
    private int origin_ = 0;
    /**
     * <code>optional uint32 origin = 14;</code>
     * @return Whether the origin field is set.
     */
    @java.lang.Override
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional uint32 origin = 14;</code>
     * @return The origin.
     */
    @java.lang.Override
    public int getOrigin() {
      return origin_;
    }

    public static final int QUESTID_FIELD_NUMBER = 15;
    private int questid_ = 0;
    /**
     * <code>optional uint32 questid = 15;</code>
     * @return Whether the questid field is set.
     */
    @java.lang.Override
    public boolean hasQuestid() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint32 questid = 15;</code>
     * @return The questid.
     */
    @java.lang.Override
    public int getQuestid() {
      return questid_;
    }

    public static final int DROPREASON_FIELD_NUMBER = 16;
    private int dropreason_ = 0;
    /**
     * <code>optional uint32 dropreason = 16;</code>
     * @return Whether the dropreason field is set.
     */
    @java.lang.Override
    public boolean hasDropreason() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint32 dropreason = 16;</code>
     * @return The dropreason.
     */
    @java.lang.Override
    public int getDropreason() {
      return dropreason_;
    }

    public static final int MUSICINDEX_FIELD_NUMBER = 17;
    private int musicindex_ = 0;
    /**
     * <code>optional uint32 musicindex = 17;</code>
     * @return Whether the musicindex field is set.
     */
    @java.lang.Override
    public boolean hasMusicindex() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional uint32 musicindex = 17;</code>
     * @return The musicindex.
     */
    @java.lang.Override
    public int getMusicindex() {
      return musicindex_;
    }

    public static final int ENTINDEX_FIELD_NUMBER = 18;
    private int entindex_ = 0;
    /**
     * <code>optional int32 entindex = 18;</code>
     * @return Whether the entindex field is set.
     */
    @java.lang.Override
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional int32 entindex = 18;</code>
     * @return The entindex.
     */
    @java.lang.Override
    public int getEntindex() {
      return entindex_;
    }

    public static final int PETINDEX_FIELD_NUMBER = 19;
    private int petindex_ = 0;
    /**
     * <code>optional uint32 petindex = 19;</code>
     * @return Whether the petindex field is set.
     */
    @java.lang.Override
    public boolean hasPetindex() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 petindex = 19;</code>
     * @return The petindex.
     */
    @java.lang.Override
    public int getPetindex() {
      return petindex_;
    }

    public static final int KEYCHAINS_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> keychains_;
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    @java.lang.Override
    public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> getKeychainsList() {
      return keychains_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    @java.lang.Override
    public java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getKeychainsOrBuilderList() {
      return keychains_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    @java.lang.Override
    public int getKeychainsCount() {
      return keychains_.size();
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    @java.lang.Override
    public Econ.CEconItemPreviewDataBlock.Sticker getKeychains(int index) {
      return keychains_.get(index);
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
     */
    @java.lang.Override
    public Econ.CEconItemPreviewDataBlock.StickerOrBuilder getKeychainsOrBuilder(
        int index) {
      return keychains_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, defindex_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, paintindex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, rarity_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, quality_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, paintwear_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, paintseed_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, killeaterscoretype_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(10, killeatervalue_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 11, customname_);
      }
      for (int i = 0; i < stickers_.size(); i++) {
        output.writeMessage(12, stickers_.get(i));
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(13, inventory_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeUInt32(14, origin_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(15, questid_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(16, dropreason_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeUInt32(17, musicindex_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeInt32(18, entindex_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt32(19, petindex_);
      }
      for (int i = 0; i < keychains_.size(); i++) {
        output.writeMessage(20, keychains_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, defindex_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, paintindex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rarity_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, quality_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, paintwear_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, paintseed_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, killeaterscoretype_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, killeatervalue_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(11, customname_);
      }
      for (int i = 0; i < stickers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, stickers_.get(i));
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, inventory_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, origin_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, questid_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, dropreason_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, musicindex_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, entindex_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, petindex_);
      }
      for (int i = 0; i < keychains_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, keychains_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Econ.CEconItemPreviewDataBlock)) {
        return super.equals(obj);
      }
      Econ.CEconItemPreviewDataBlock other = (Econ.CEconItemPreviewDataBlock) obj;

      if (hasAccountid() != other.hasAccountid()) return false;
      if (hasAccountid()) {
        if (getAccountid()
            != other.getAccountid()) return false;
      }
      if (hasItemid() != other.hasItemid()) return false;
      if (hasItemid()) {
        if (getItemid()
            != other.getItemid()) return false;
      }
      if (hasDefindex() != other.hasDefindex()) return false;
      if (hasDefindex()) {
        if (getDefindex()
            != other.getDefindex()) return false;
      }
      if (hasPaintindex() != other.hasPaintindex()) return false;
      if (hasPaintindex()) {
        if (getPaintindex()
            != other.getPaintindex()) return false;
      }
      if (hasRarity() != other.hasRarity()) return false;
      if (hasRarity()) {
        if (getRarity()
            != other.getRarity()) return false;
      }
      if (hasQuality() != other.hasQuality()) return false;
      if (hasQuality()) {
        if (getQuality()
            != other.getQuality()) return false;
      }
      if (hasPaintwear() != other.hasPaintwear()) return false;
      if (hasPaintwear()) {
        if (getPaintwear()
            != other.getPaintwear()) return false;
      }
      if (hasPaintseed() != other.hasPaintseed()) return false;
      if (hasPaintseed()) {
        if (getPaintseed()
            != other.getPaintseed()) return false;
      }
      if (hasKilleaterscoretype() != other.hasKilleaterscoretype()) return false;
      if (hasKilleaterscoretype()) {
        if (getKilleaterscoretype()
            != other.getKilleaterscoretype()) return false;
      }
      if (hasKilleatervalue() != other.hasKilleatervalue()) return false;
      if (hasKilleatervalue()) {
        if (getKilleatervalue()
            != other.getKilleatervalue()) return false;
      }
      if (hasCustomname() != other.hasCustomname()) return false;
      if (hasCustomname()) {
        if (!getCustomname()
            .equals(other.getCustomname())) return false;
      }
      if (!getStickersList()
          .equals(other.getStickersList())) return false;
      if (hasInventory() != other.hasInventory()) return false;
      if (hasInventory()) {
        if (getInventory()
            != other.getInventory()) return false;
      }
      if (hasOrigin() != other.hasOrigin()) return false;
      if (hasOrigin()) {
        if (getOrigin()
            != other.getOrigin()) return false;
      }
      if (hasQuestid() != other.hasQuestid()) return false;
      if (hasQuestid()) {
        if (getQuestid()
            != other.getQuestid()) return false;
      }
      if (hasDropreason() != other.hasDropreason()) return false;
      if (hasDropreason()) {
        if (getDropreason()
            != other.getDropreason()) return false;
      }
      if (hasMusicindex() != other.hasMusicindex()) return false;
      if (hasMusicindex()) {
        if (getMusicindex()
            != other.getMusicindex()) return false;
      }
      if (hasEntindex() != other.hasEntindex()) return false;
      if (hasEntindex()) {
        if (getEntindex()
            != other.getEntindex()) return false;
      }
      if (hasPetindex() != other.hasPetindex()) return false;
      if (hasPetindex()) {
        if (getPetindex()
            != other.getPetindex()) return false;
      }
      if (!getKeychainsList()
          .equals(other.getKeychainsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      if (hasItemid()) {
        hash = (37 * hash) + ITEMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getItemid());
      }
      if (hasDefindex()) {
        hash = (37 * hash) + DEFINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getDefindex();
      }
      if (hasPaintindex()) {
        hash = (37 * hash) + PAINTINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getPaintindex();
      }
      if (hasRarity()) {
        hash = (37 * hash) + RARITY_FIELD_NUMBER;
        hash = (53 * hash) + getRarity();
      }
      if (hasQuality()) {
        hash = (37 * hash) + QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getQuality();
      }
      if (hasPaintwear()) {
        hash = (37 * hash) + PAINTWEAR_FIELD_NUMBER;
        hash = (53 * hash) + getPaintwear();
      }
      if (hasPaintseed()) {
        hash = (37 * hash) + PAINTSEED_FIELD_NUMBER;
        hash = (53 * hash) + getPaintseed();
      }
      if (hasKilleaterscoretype()) {
        hash = (37 * hash) + KILLEATERSCORETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKilleaterscoretype();
      }
      if (hasKilleatervalue()) {
        hash = (37 * hash) + KILLEATERVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getKilleatervalue();
      }
      if (hasCustomname()) {
        hash = (37 * hash) + CUSTOMNAME_FIELD_NUMBER;
        hash = (53 * hash) + getCustomname().hashCode();
      }
      if (getStickersCount() > 0) {
        hash = (37 * hash) + STICKERS_FIELD_NUMBER;
        hash = (53 * hash) + getStickersList().hashCode();
      }
      if (hasInventory()) {
        hash = (37 * hash) + INVENTORY_FIELD_NUMBER;
        hash = (53 * hash) + getInventory();
      }
      if (hasOrigin()) {
        hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
        hash = (53 * hash) + getOrigin();
      }
      if (hasQuestid()) {
        hash = (37 * hash) + QUESTID_FIELD_NUMBER;
        hash = (53 * hash) + getQuestid();
      }
      if (hasDropreason()) {
        hash = (37 * hash) + DROPREASON_FIELD_NUMBER;
        hash = (53 * hash) + getDropreason();
      }
      if (hasMusicindex()) {
        hash = (37 * hash) + MUSICINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getMusicindex();
      }
      if (hasEntindex()) {
        hash = (37 * hash) + ENTINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getEntindex();
      }
      if (hasPetindex()) {
        hash = (37 * hash) + PETINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getPetindex();
      }
      if (getKeychainsCount() > 0) {
        hash = (37 * hash) + KEYCHAINS_FIELD_NUMBER;
        hash = (53 * hash) + getKeychainsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Econ.CEconItemPreviewDataBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Econ.CEconItemPreviewDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Econ.CEconItemPreviewDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Econ.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Econ.CEconItemPreviewDataBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CEconItemPreviewDataBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CEconItemPreviewDataBlock)
        Econ.CEconItemPreviewDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Econ.internal_static_CEconItemPreviewDataBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Econ.internal_static_CEconItemPreviewDataBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Econ.CEconItemPreviewDataBlock.class, Econ.CEconItemPreviewDataBlock.Builder.class);
      }

      // Construct using Econ.CEconItemPreviewDataBlock.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accountid_ = 0;
        itemid_ = 0L;
        defindex_ = 0;
        paintindex_ = 0;
        rarity_ = 0;
        quality_ = 0;
        paintwear_ = 0;
        paintseed_ = 0;
        killeaterscoretype_ = 0;
        killeatervalue_ = 0;
        customname_ = "";
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
        } else {
          stickers_ = null;
          stickersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        inventory_ = 0;
        origin_ = 0;
        questid_ = 0;
        dropreason_ = 0;
        musicindex_ = 0;
        entindex_ = 0;
        petindex_ = 0;
        if (keychainsBuilder_ == null) {
          keychains_ = java.util.Collections.emptyList();
        } else {
          keychains_ = null;
          keychainsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Econ.internal_static_CEconItemPreviewDataBlock_descriptor;
      }

      @java.lang.Override
      public Econ.CEconItemPreviewDataBlock getDefaultInstanceForType() {
        return Econ.CEconItemPreviewDataBlock.getDefaultInstance();
      }

      @java.lang.Override
      public Econ.CEconItemPreviewDataBlock build() {
        Econ.CEconItemPreviewDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Econ.CEconItemPreviewDataBlock buildPartial() {
        Econ.CEconItemPreviewDataBlock result = new Econ.CEconItemPreviewDataBlock(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(Econ.CEconItemPreviewDataBlock result) {
        if (stickersBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            stickers_ = java.util.Collections.unmodifiableList(stickers_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.stickers_ = stickers_;
        } else {
          result.stickers_ = stickersBuilder_.build();
        }
        if (keychainsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0)) {
            keychains_ = java.util.Collections.unmodifiableList(keychains_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.keychains_ = keychains_;
        } else {
          result.keychains_ = keychainsBuilder_.build();
        }
      }

      private void buildPartial0(Econ.CEconItemPreviewDataBlock result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountid_ = accountid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.itemid_ = itemid_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.defindex_ = defindex_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.paintindex_ = paintindex_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.rarity_ = rarity_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.quality_ = quality_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.paintwear_ = paintwear_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.paintseed_ = paintseed_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.killeaterscoretype_ = killeaterscoretype_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.killeatervalue_ = killeatervalue_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.customname_ = customname_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.inventory_ = inventory_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.origin_ = origin_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.questid_ = questid_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.dropreason_ = dropreason_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.musicindex_ = musicindex_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.entindex_ = entindex_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.petindex_ = petindex_;
          to_bitField0_ |= 0x00020000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Econ.CEconItemPreviewDataBlock) {
          return mergeFrom((Econ.CEconItemPreviewDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Econ.CEconItemPreviewDataBlock other) {
        if (other == Econ.CEconItemPreviewDataBlock.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasDefindex()) {
          setDefindex(other.getDefindex());
        }
        if (other.hasPaintindex()) {
          setPaintindex(other.getPaintindex());
        }
        if (other.hasRarity()) {
          setRarity(other.getRarity());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasPaintwear()) {
          setPaintwear(other.getPaintwear());
        }
        if (other.hasPaintseed()) {
          setPaintseed(other.getPaintseed());
        }
        if (other.hasKilleaterscoretype()) {
          setKilleaterscoretype(other.getKilleaterscoretype());
        }
        if (other.hasKilleatervalue()) {
          setKilleatervalue(other.getKilleatervalue());
        }
        if (other.hasCustomname()) {
          customname_ = other.customname_;
          bitField0_ |= 0x00000400;
          onChanged();
        }
        if (stickersBuilder_ == null) {
          if (!other.stickers_.isEmpty()) {
            if (stickers_.isEmpty()) {
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureStickersIsMutable();
              stickers_.addAll(other.stickers_);
            }
            onChanged();
          }
        } else {
          if (!other.stickers_.isEmpty()) {
            if (stickersBuilder_.isEmpty()) {
              stickersBuilder_.dispose();
              stickersBuilder_ = null;
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000800);
              stickersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetStickersFieldBuilder() : null;
            } else {
              stickersBuilder_.addAllMessages(other.stickers_);
            }
          }
        }
        if (other.hasInventory()) {
          setInventory(other.getInventory());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        if (other.hasQuestid()) {
          setQuestid(other.getQuestid());
        }
        if (other.hasDropreason()) {
          setDropreason(other.getDropreason());
        }
        if (other.hasMusicindex()) {
          setMusicindex(other.getMusicindex());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasPetindex()) {
          setPetindex(other.getPetindex());
        }
        if (keychainsBuilder_ == null) {
          if (!other.keychains_.isEmpty()) {
            if (keychains_.isEmpty()) {
              keychains_ = other.keychains_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureKeychainsIsMutable();
              keychains_.addAll(other.keychains_);
            }
            onChanged();
          }
        } else {
          if (!other.keychains_.isEmpty()) {
            if (keychainsBuilder_.isEmpty()) {
              keychainsBuilder_.dispose();
              keychainsBuilder_ = null;
              keychains_ = other.keychains_;
              bitField0_ = (bitField0_ & ~0x00080000);
              keychainsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetKeychainsFieldBuilder() : null;
            } else {
              keychainsBuilder_.addAllMessages(other.keychains_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountid_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                itemid_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                defindex_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                paintindex_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                rarity_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                quality_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                paintwear_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                paintseed_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                killeaterscoretype_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                killeatervalue_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                customname_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                Econ.CEconItemPreviewDataBlock.Sticker m =
                    input.readMessage(
                        Econ.CEconItemPreviewDataBlock.Sticker.parser(),
                        extensionRegistry);
                if (stickersBuilder_ == null) {
                  ensureStickersIsMutable();
                  stickers_.add(m);
                } else {
                  stickersBuilder_.addMessage(m);
                }
                break;
              } // case 98
              case 104: {
                inventory_ = input.readUInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                origin_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                questid_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                dropreason_ = input.readUInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                musicindex_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                entindex_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                petindex_ = input.readUInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 162: {
                Econ.CEconItemPreviewDataBlock.Sticker m =
                    input.readMessage(
                        Econ.CEconItemPreviewDataBlock.Sticker.parser(),
                        extensionRegistry);
                if (keychainsBuilder_ == null) {
                  ensureKeychainsIsMutable();
                  keychains_.add(m);
                } else {
                  keychainsBuilder_.addMessage(m);
                }
                break;
              } // case 162
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       * @return Whether the accountid field is set.
       */
      @java.lang.Override
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       * @return The accountid.
       */
      @java.lang.Override
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       * @param value The accountid to set.
       * @return This builder for chaining.
       */
      public Builder setAccountid(int value) {

        accountid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private long itemid_ ;
      /**
       * <code>optional uint64 itemid = 2;</code>
       * @return Whether the itemid field is set.
       */
      @java.lang.Override
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       * @return The itemid.
       */
      @java.lang.Override
      public long getItemid() {
        return itemid_;
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       * @param value The itemid to set.
       * @return This builder for chaining.
       */
      public Builder setItemid(long value) {

        itemid_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemid_ = 0L;
        onChanged();
        return this;
      }

      private int defindex_ ;
      /**
       * <code>optional uint32 defindex = 3;</code>
       * @return Whether the defindex field is set.
       */
      @java.lang.Override
      public boolean hasDefindex() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       * @return The defindex.
       */
      @java.lang.Override
      public int getDefindex() {
        return defindex_;
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       * @param value The defindex to set.
       * @return This builder for chaining.
       */
      public Builder setDefindex(int value) {

        defindex_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defindex_ = 0;
        onChanged();
        return this;
      }

      private int paintindex_ ;
      /**
       * <code>optional uint32 paintindex = 4;</code>
       * @return Whether the paintindex field is set.
       */
      @java.lang.Override
      public boolean hasPaintindex() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       * @return The paintindex.
       */
      @java.lang.Override
      public int getPaintindex() {
        return paintindex_;
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       * @param value The paintindex to set.
       * @return This builder for chaining.
       */
      public Builder setPaintindex(int value) {

        paintindex_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPaintindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        paintindex_ = 0;
        onChanged();
        return this;
      }

      private int rarity_ ;
      /**
       * <code>optional uint32 rarity = 5;</code>
       * @return Whether the rarity field is set.
       */
      @java.lang.Override
      public boolean hasRarity() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       * @return The rarity.
       */
      @java.lang.Override
      public int getRarity() {
        return rarity_;
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       * @param value The rarity to set.
       * @return This builder for chaining.
       */
      public Builder setRarity(int value) {

        rarity_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRarity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rarity_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>optional uint32 quality = 6;</code>
       * @return Whether the quality field is set.
       */
      @java.lang.Override
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       * @return The quality.
       */
      @java.lang.Override
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       * @param value The quality to set.
       * @return This builder for chaining.
       */
      public Builder setQuality(int value) {

        quality_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000020);
        quality_ = 0;
        onChanged();
        return this;
      }

      private int paintwear_ ;
      /**
       * <code>optional uint32 paintwear = 7;</code>
       * @return Whether the paintwear field is set.
       */
      @java.lang.Override
      public boolean hasPaintwear() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       * @return The paintwear.
       */
      @java.lang.Override
      public int getPaintwear() {
        return paintwear_;
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       * @param value The paintwear to set.
       * @return This builder for chaining.
       */
      public Builder setPaintwear(int value) {

        paintwear_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPaintwear() {
        bitField0_ = (bitField0_ & ~0x00000040);
        paintwear_ = 0;
        onChanged();
        return this;
      }

      private int paintseed_ ;
      /**
       * <code>optional uint32 paintseed = 8;</code>
       * @return Whether the paintseed field is set.
       */
      @java.lang.Override
      public boolean hasPaintseed() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       * @return The paintseed.
       */
      @java.lang.Override
      public int getPaintseed() {
        return paintseed_;
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       * @param value The paintseed to set.
       * @return This builder for chaining.
       */
      public Builder setPaintseed(int value) {

        paintseed_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPaintseed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        paintseed_ = 0;
        onChanged();
        return this;
      }

      private int killeaterscoretype_ ;
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       * @return Whether the killeaterscoretype field is set.
       */
      @java.lang.Override
      public boolean hasKilleaterscoretype() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       * @return The killeaterscoretype.
       */
      @java.lang.Override
      public int getKilleaterscoretype() {
        return killeaterscoretype_;
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       * @param value The killeaterscoretype to set.
       * @return This builder for chaining.
       */
      public Builder setKilleaterscoretype(int value) {

        killeaterscoretype_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearKilleaterscoretype() {
        bitField0_ = (bitField0_ & ~0x00000100);
        killeaterscoretype_ = 0;
        onChanged();
        return this;
      }

      private int killeatervalue_ ;
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       * @return Whether the killeatervalue field is set.
       */
      @java.lang.Override
      public boolean hasKilleatervalue() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       * @return The killeatervalue.
       */
      @java.lang.Override
      public int getKilleatervalue() {
        return killeatervalue_;
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       * @param value The killeatervalue to set.
       * @return This builder for chaining.
       */
      public Builder setKilleatervalue(int value) {

        killeatervalue_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKilleatervalue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        killeatervalue_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object customname_ = "";
      /**
       * <code>optional string customname = 11;</code>
       * @return Whether the customname field is set.
       */
      public boolean hasCustomname() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional string customname = 11;</code>
       * @return The customname.
       */
      public java.lang.String getCustomname() {
        java.lang.Object ref = customname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          customname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string customname = 11;</code>
       * @return The bytes for customname.
       */
      public com.google.protobuf.ByteString
          getCustomnameBytes() {
        java.lang.Object ref = customname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string customname = 11;</code>
       * @param value The customname to set.
       * @return This builder for chaining.
       */
      public Builder setCustomname(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        customname_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional string customname = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCustomname() {
        customname_ = getDefaultInstance().getCustomname();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <code>optional string customname = 11;</code>
       * @param value The bytes for customname to set.
       * @return This builder for chaining.
       */
      public Builder setCustomnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        customname_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> stickers_ =
        java.util.Collections.emptyList();
      private void ensureStickersIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          stickers_ = new java.util.ArrayList<Econ.CEconItemPreviewDataBlock.Sticker>(stickers_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder> stickersBuilder_;

      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> getStickersList() {
        if (stickersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stickers_);
        } else {
          return stickersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public int getStickersCount() {
        if (stickersBuilder_ == null) {
          return stickers_.size();
        } else {
          return stickersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker getStickers(int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);
        } else {
          return stickersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder setStickers(
          int index, Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.set(index, value);
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder setStickers(
          int index, Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          int index, Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(index, value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          int index, Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addAllStickers(
          java.lang.Iterable<? extends Econ.CEconItemPreviewDataBlock.Sticker> values) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stickers_);
          onChanged();
        } else {
          stickersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder clearStickers() {
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          stickersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder removeStickers(int index) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.remove(index);
          onChanged();
        } else {
          stickersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder getStickersBuilder(
          int index) {
        return internalGetStickersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Econ.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
          int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);  } else {
          return stickersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
           getStickersOrBuilderList() {
        if (stickersBuilder_ != null) {
          return stickersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stickers_);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder addStickersBuilder() {
        return internalGetStickersFieldBuilder().addBuilder(
            Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder addStickersBuilder(
          int index) {
        return internalGetStickersFieldBuilder().addBuilder(
            index, Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker.Builder> 
           getStickersBuilderList() {
        return internalGetStickersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
          internalGetStickersFieldBuilder() {
        if (stickersBuilder_ == null) {
          stickersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder>(
                  stickers_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          stickers_ = null;
        }
        return stickersBuilder_;
      }

      private int inventory_ ;
      /**
       * <code>optional uint32 inventory = 13;</code>
       * @return Whether the inventory field is set.
       */
      @java.lang.Override
      public boolean hasInventory() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       * @return The inventory.
       */
      @java.lang.Override
      public int getInventory() {
        return inventory_;
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       * @param value The inventory to set.
       * @return This builder for chaining.
       */
      public Builder setInventory(int value) {

        inventory_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearInventory() {
        bitField0_ = (bitField0_ & ~0x00001000);
        inventory_ = 0;
        onChanged();
        return this;
      }

      private int origin_ ;
      /**
       * <code>optional uint32 origin = 14;</code>
       * @return Whether the origin field is set.
       */
      @java.lang.Override
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       * @return The origin.
       */
      @java.lang.Override
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       * @param value The origin to set.
       * @return This builder for chaining.
       */
      public Builder setOrigin(int value) {

        origin_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00002000);
        origin_ = 0;
        onChanged();
        return this;
      }

      private int questid_ ;
      /**
       * <code>optional uint32 questid = 15;</code>
       * @return Whether the questid field is set.
       */
      @java.lang.Override
      public boolean hasQuestid() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       * @return The questid.
       */
      @java.lang.Override
      public int getQuestid() {
        return questid_;
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       * @param value The questid to set.
       * @return This builder for chaining.
       */
      public Builder setQuestid(int value) {

        questid_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuestid() {
        bitField0_ = (bitField0_ & ~0x00004000);
        questid_ = 0;
        onChanged();
        return this;
      }

      private int dropreason_ ;
      /**
       * <code>optional uint32 dropreason = 16;</code>
       * @return Whether the dropreason field is set.
       */
      @java.lang.Override
      public boolean hasDropreason() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       * @return The dropreason.
       */
      @java.lang.Override
      public int getDropreason() {
        return dropreason_;
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       * @param value The dropreason to set.
       * @return This builder for chaining.
       */
      public Builder setDropreason(int value) {

        dropreason_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearDropreason() {
        bitField0_ = (bitField0_ & ~0x00008000);
        dropreason_ = 0;
        onChanged();
        return this;
      }

      private int musicindex_ ;
      /**
       * <code>optional uint32 musicindex = 17;</code>
       * @return Whether the musicindex field is set.
       */
      @java.lang.Override
      public boolean hasMusicindex() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       * @return The musicindex.
       */
      @java.lang.Override
      public int getMusicindex() {
        return musicindex_;
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       * @param value The musicindex to set.
       * @return This builder for chaining.
       */
      public Builder setMusicindex(int value) {

        musicindex_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearMusicindex() {
        bitField0_ = (bitField0_ & ~0x00010000);
        musicindex_ = 0;
        onChanged();
        return this;
      }

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 18;</code>
       * @return Whether the entindex field is set.
       */
      @java.lang.Override
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       * @return The entindex.
       */
      @java.lang.Override
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       * @param value The entindex to set.
       * @return This builder for chaining.
       */
      public Builder setEntindex(int value) {

        entindex_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private int petindex_ ;
      /**
       * <code>optional uint32 petindex = 19;</code>
       * @return Whether the petindex field is set.
       */
      @java.lang.Override
      public boolean hasPetindex() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint32 petindex = 19;</code>
       * @return The petindex.
       */
      @java.lang.Override
      public int getPetindex() {
        return petindex_;
      }
      /**
       * <code>optional uint32 petindex = 19;</code>
       * @param value The petindex to set.
       * @return This builder for chaining.
       */
      public Builder setPetindex(int value) {

        petindex_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 petindex = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearPetindex() {
        bitField0_ = (bitField0_ & ~0x00040000);
        petindex_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> keychains_ =
        java.util.Collections.emptyList();
      private void ensureKeychainsIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          keychains_ = new java.util.ArrayList<Econ.CEconItemPreviewDataBlock.Sticker>(keychains_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder> keychainsBuilder_;

      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker> getKeychainsList() {
        if (keychainsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keychains_);
        } else {
          return keychainsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public int getKeychainsCount() {
        if (keychainsBuilder_ == null) {
          return keychains_.size();
        } else {
          return keychainsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker getKeychains(int index) {
        if (keychainsBuilder_ == null) {
          return keychains_.get(index);
        } else {
          return keychainsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder setKeychains(
          int index, Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (keychainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeychainsIsMutable();
          keychains_.set(index, value);
          onChanged();
        } else {
          keychainsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder setKeychains(
          int index, Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (keychainsBuilder_ == null) {
          ensureKeychainsIsMutable();
          keychains_.set(index, builderForValue.build());
          onChanged();
        } else {
          keychainsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder addKeychains(Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (keychainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeychainsIsMutable();
          keychains_.add(value);
          onChanged();
        } else {
          keychainsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder addKeychains(
          int index, Econ.CEconItemPreviewDataBlock.Sticker value) {
        if (keychainsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeychainsIsMutable();
          keychains_.add(index, value);
          onChanged();
        } else {
          keychainsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder addKeychains(
          Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (keychainsBuilder_ == null) {
          ensureKeychainsIsMutable();
          keychains_.add(builderForValue.build());
          onChanged();
        } else {
          keychainsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder addKeychains(
          int index, Econ.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (keychainsBuilder_ == null) {
          ensureKeychainsIsMutable();
          keychains_.add(index, builderForValue.build());
          onChanged();
        } else {
          keychainsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder addAllKeychains(
          java.lang.Iterable<? extends Econ.CEconItemPreviewDataBlock.Sticker> values) {
        if (keychainsBuilder_ == null) {
          ensureKeychainsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keychains_);
          onChanged();
        } else {
          keychainsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder clearKeychains() {
        if (keychainsBuilder_ == null) {
          keychains_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          keychainsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Builder removeKeychains(int index) {
        if (keychainsBuilder_ == null) {
          ensureKeychainsIsMutable();
          keychains_.remove(index);
          onChanged();
        } else {
          keychainsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder getKeychainsBuilder(
          int index) {
        return internalGetKeychainsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Econ.CEconItemPreviewDataBlock.StickerOrBuilder getKeychainsOrBuilder(
          int index) {
        if (keychainsBuilder_ == null) {
          return keychains_.get(index);  } else {
          return keychainsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public java.util.List<? extends Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
           getKeychainsOrBuilderList() {
        if (keychainsBuilder_ != null) {
          return keychainsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keychains_);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder addKeychainsBuilder() {
        return internalGetKeychainsFieldBuilder().addBuilder(
            Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public Econ.CEconItemPreviewDataBlock.Sticker.Builder addKeychainsBuilder(
          int index) {
        return internalGetKeychainsFieldBuilder().addBuilder(
            index, Econ.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;</code>
       */
      public java.util.List<Econ.CEconItemPreviewDataBlock.Sticker.Builder> 
           getKeychainsBuilderList() {
        return internalGetKeychainsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder> 
          internalGetKeychainsFieldBuilder() {
        if (keychainsBuilder_ == null) {
          keychainsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Econ.CEconItemPreviewDataBlock.Sticker, Econ.CEconItemPreviewDataBlock.Sticker.Builder, Econ.CEconItemPreviewDataBlock.StickerOrBuilder>(
                  keychains_,
                  ((bitField0_ & 0x00080000) != 0),
                  getParentForChildren(),
                  isClean());
          keychains_ = null;
        }
        return keychainsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CEconItemPreviewDataBlock)
    }

    // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
    private static final Econ.CEconItemPreviewDataBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Econ.CEconItemPreviewDataBlock();
    }

    public static Econ.CEconItemPreviewDataBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CEconItemPreviewDataBlock>
        PARSER = new com.google.protobuf.AbstractParser<CEconItemPreviewDataBlock>() {
      @java.lang.Override
      public CEconItemPreviewDataBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CEconItemPreviewDataBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CEconItemPreviewDataBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Econ.CEconItemPreviewDataBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CEconItemPreviewDataBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CEconItemPreviewDataBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\necon.proto\"\306\t\n\031CEconItemPreviewDataBlo" +
      "ck\022\026\n\taccountid\030\001 \001(\rH\000\210\001\001\022\023\n\006itemid\030\002 \001" +
      "(\004H\001\210\001\001\022\025\n\010defindex\030\003 \001(\rH\002\210\001\001\022\027\n\npainti" +
      "ndex\030\004 \001(\rH\003\210\001\001\022\023\n\006rarity\030\005 \001(\rH\004\210\001\001\022\024\n\007" +
      "quality\030\006 \001(\rH\005\210\001\001\022\026\n\tpaintwear\030\007 \001(\rH\006\210" +
      "\001\001\022\026\n\tpaintseed\030\010 \001(\rH\007\210\001\001\022\037\n\022killeaters" +
      "coretype\030\t \001(\rH\010\210\001\001\022\033\n\016killeatervalue\030\n " +
      "\001(\rH\t\210\001\001\022\027\n\ncustomname\030\013 \001(\tH\n\210\001\001\0224\n\010sti" +
      "ckers\030\014 \003(\0132\".CEconItemPreviewDataBlock." +
      "Sticker\022\026\n\tinventory\030\r \001(\rH\013\210\001\001\022\023\n\006origi" +
      "n\030\016 \001(\rH\014\210\001\001\022\024\n\007questid\030\017 \001(\rH\r\210\001\001\022\027\n\ndr" +
      "opreason\030\020 \001(\rH\016\210\001\001\022\027\n\nmusicindex\030\021 \001(\rH" +
      "\017\210\001\001\022\025\n\010entindex\030\022 \001(\005H\020\210\001\001\022\025\n\010petindex\030" +
      "\023 \001(\rH\021\210\001\001\0225\n\tkeychains\030\024 \003(\0132\".CEconIte" +
      "mPreviewDataBlock.Sticker\032\213\003\n\007Sticker\022\021\n" +
      "\004slot\030\001 \001(\rH\000\210\001\001\022\027\n\nsticker_id\030\002 \001(\rH\001\210\001" +
      "\001\022\021\n\004wear\030\003 \001(\002H\002\210\001\001\022\022\n\005scale\030\004 \001(\002H\003\210\001\001" +
      "\022\025\n\010rotation\030\005 \001(\002H\004\210\001\001\022\024\n\007tint_id\030\006 \001(\r" +
      "H\005\210\001\001\022\025\n\010offset_x\030\007 \001(\002H\006\210\001\001\022\025\n\010offset_y" +
      "\030\010 \001(\002H\007\210\001\001\022\025\n\010offset_z\030\t \001(\002H\010\210\001\001\022\024\n\007pa" +
      "ttern\030\n \001(\rH\t\210\001\001\022\033\n\016highlight_reel\030\013 \001(\r" +
      "H\n\210\001\001B\007\n\005_slotB\r\n\013_sticker_idB\007\n\005_wearB\010" +
      "\n\006_scaleB\013\n\t_rotationB\n\n\010_tint_idB\013\n\t_of" +
      "fset_xB\013\n\t_offset_yB\013\n\t_offset_zB\n\n\010_pat" +
      "ternB\021\n\017_highlight_reelB\014\n\n_accountidB\t\n" +
      "\007_itemidB\013\n\t_defindexB\r\n\013_paintindexB\t\n\007" +
      "_rarityB\n\n\010_qualityB\014\n\n_paintwearB\014\n\n_pa" +
      "intseedB\025\n\023_killeaterscoretypeB\021\n\017_kille" +
      "atervalueB\r\n\013_customnameB\014\n\n_inventoryB\t" +
      "\n\007_originB\n\n\010_questidB\r\n\013_dropreasonB\r\n\013" +
      "_musicindexB\013\n\t_entindexB\013\n\t_petindexb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_CEconItemPreviewDataBlock_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CEconItemPreviewDataBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CEconItemPreviewDataBlock_descriptor,
        new java.lang.String[] { "Accountid", "Itemid", "Defindex", "Paintindex", "Rarity", "Quality", "Paintwear", "Paintseed", "Killeaterscoretype", "Killeatervalue", "Customname", "Stickers", "Inventory", "Origin", "Questid", "Dropreason", "Musicindex", "Entindex", "Petindex", "Keychains", });
    internal_static_CEconItemPreviewDataBlock_Sticker_descriptor =
      internal_static_CEconItemPreviewDataBlock_descriptor.getNestedTypes().get(0);
    internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CEconItemPreviewDataBlock_Sticker_descriptor,
        new java.lang.String[] { "Slot", "StickerId", "Wear", "Scale", "Rotation", "TintId", "OffsetX", "OffsetY", "OffsetZ", "Pattern", "HighlightReel", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
